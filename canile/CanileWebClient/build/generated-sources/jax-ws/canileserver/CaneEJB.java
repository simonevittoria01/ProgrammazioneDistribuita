
package canileserver;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * Eclipse Metro/4.0.4 (RELEASE-4.0.4-ec440d5; 2024-06-28T10:09:00+0000) XMLWS-Impl/4.0.3 XMLWS-API/4.0.2 XMLB-Impl/4.0.5 XMLB-API/4.0.2
 * Generated source version: 3.0
 * 
 */
@WebService(name = "CaneEJB", targetNamespace = "http://canileserver/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CaneEJB {


    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns java.util.List<canileserver.Cane>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaPerTagliaEeta", targetNamespace = "http://canileserver/", className = "canileserver.TrovaPerTagliaEeta")
    @ResponseWrapper(localName = "trovaPerTagliaEetaResponse", targetNamespace = "http://canileserver/", className = "canileserver.TrovaPerTagliaEetaResponse")
    @Action(input = "http://canileserver/CaneEJB/trovaPerTagliaEetaRequest", output = "http://canileserver/CaneEJB/trovaPerTagliaEetaResponse")
    public List<Cane> trovaPerTagliaEeta(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "adotta", targetNamespace = "http://canileserver/", className = "canileserver.Adotta")
    @ResponseWrapper(localName = "adottaResponse", targetNamespace = "http://canileserver/", className = "canileserver.AdottaResponse")
    @Action(input = "http://canileserver/CaneEJB/adottaRequest", output = "http://canileserver/CaneEJB/adottaResponse")
    public boolean adotta(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "inserisci", targetNamespace = "http://canileserver/", className = "canileserver.Inserisci")
    @ResponseWrapper(localName = "inserisciResponse", targetNamespace = "http://canileserver/", className = "canileserver.InserisciResponse")
    @Action(input = "http://canileserver/CaneEJB/inserisciRequest", output = "http://canileserver/CaneEJB/inserisciResponse")
    public void inserisci(
        @WebParam(name = "arg0", targetNamespace = "")
        Cane arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "elimina", targetNamespace = "http://canileserver/", className = "canileserver.Elimina")
    @ResponseWrapper(localName = "eliminaResponse", targetNamespace = "http://canileserver/", className = "canileserver.EliminaResponse")
    @Action(input = "http://canileserver/CaneEJB/eliminaRequest", output = "http://canileserver/CaneEJB/eliminaResponse")
    public void elimina(
        @WebParam(name = "arg0", targetNamespace = "")
        Cane arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns canileserver.Cane
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaPerId", targetNamespace = "http://canileserver/", className = "canileserver.TrovaPerId")
    @ResponseWrapper(localName = "trovaPerIdResponse", targetNamespace = "http://canileserver/", className = "canileserver.TrovaPerIdResponse")
    @Action(input = "http://canileserver/CaneEJB/trovaPerIdRequest", output = "http://canileserver/CaneEJB/trovaPerIdResponse")
    public Cane trovaPerId(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "aggiorna", targetNamespace = "http://canileserver/", className = "canileserver.Aggiorna")
    @ResponseWrapper(localName = "aggiornaResponse", targetNamespace = "http://canileserver/", className = "canileserver.AggiornaResponse")
    @Action(input = "http://canileserver/CaneEJB/aggiornaRequest", output = "http://canileserver/CaneEJB/aggiornaResponse")
    public void aggiorna(
        @WebParam(name = "arg0", targetNamespace = "")
        Cane arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<canileserver.Cane>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaPerRazza", targetNamespace = "http://canileserver/", className = "canileserver.TrovaPerRazza")
    @ResponseWrapper(localName = "trovaPerRazzaResponse", targetNamespace = "http://canileserver/", className = "canileserver.TrovaPerRazzaResponse")
    @Action(input = "http://canileserver/CaneEJB/trovaPerRazzaRequest", output = "http://canileserver/CaneEJB/trovaPerRazzaResponse")
    public List<Cane> trovaPerRazza(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<canileserver.Cane>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaPerNome", targetNamespace = "http://canileserver/", className = "canileserver.TrovaPerNome")
    @ResponseWrapper(localName = "trovaPerNomeResponse", targetNamespace = "http://canileserver/", className = "canileserver.TrovaPerNomeResponse")
    @Action(input = "http://canileserver/CaneEJB/trovaPerNomeRequest", output = "http://canileserver/CaneEJB/trovaPerNomeResponse")
    public List<Cane> trovaPerNome(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<canileserver.Cane>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaPerTaglia", targetNamespace = "http://canileserver/", className = "canileserver.TrovaPerTaglia")
    @ResponseWrapper(localName = "trovaPerTagliaResponse", targetNamespace = "http://canileserver/", className = "canileserver.TrovaPerTagliaResponse")
    @Action(input = "http://canileserver/CaneEJB/trovaPerTagliaRequest", output = "http://canileserver/CaneEJB/trovaPerTagliaResponse")
    public List<Cane> trovaPerTaglia(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<canileserver.Cane>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaPerEta", targetNamespace = "http://canileserver/", className = "canileserver.TrovaPerEta")
    @ResponseWrapper(localName = "trovaPerEtaResponse", targetNamespace = "http://canileserver/", className = "canileserver.TrovaPerEtaResponse")
    @Action(input = "http://canileserver/CaneEJB/trovaPerEtaRequest", output = "http://canileserver/CaneEJB/trovaPerEtaResponse")
    public List<Cane> trovaPerEta(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<canileserver.Cane>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaPerStato", targetNamespace = "http://canileserver/", className = "canileserver.TrovaPerStato")
    @ResponseWrapper(localName = "trovaPerStatoResponse", targetNamespace = "http://canileserver/", className = "canileserver.TrovaPerStatoResponse")
    @Action(input = "http://canileserver/CaneEJB/trovaPerStatoRequest", output = "http://canileserver/CaneEJB/trovaPerStatoResponse")
    public List<Cane> trovaPerStato(
        @WebParam(name = "arg0", targetNamespace = "")
        boolean arg0);

    /**
     * 
     * @return
     *     returns java.util.List<canileserver.Cane>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaTutto", targetNamespace = "http://canileserver/", className = "canileserver.TrovaTutto")
    @ResponseWrapper(localName = "trovaTuttoResponse", targetNamespace = "http://canileserver/", className = "canileserver.TrovaTuttoResponse")
    @Action(input = "http://canileserver/CaneEJB/trovaTuttoRequest", output = "http://canileserver/CaneEJB/trovaTuttoResponse")
    public List<Cane> trovaTutto();

}
