
package abitanteserver;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * Eclipse Metro/4.0.4 (RELEASE-4.0.4-ec440d5; 2024-06-28T10:09:00+0000) XMLWS-Impl/4.0.3 XMLWS-API/4.0.2 XMLB-Impl/4.0.5 XMLB-API/4.0.2
 * Generated source version: 3.0
 * 
 */
@WebService(name = "AbitanteEJB", targetNamespace = "http://abitanteserver/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AbitanteEJB {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<abitanteserver.Abitante>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaPerCategoria", targetNamespace = "http://abitanteserver/", className = "abitanteserver.TrovaPerCategoria")
    @ResponseWrapper(localName = "trovaPerCategoriaResponse", targetNamespace = "http://abitanteserver/", className = "abitanteserver.TrovaPerCategoriaResponse")
    @Action(input = "http://abitanteserver/AbitanteEJB/trovaPerCategoriaRequest", output = "http://abitanteserver/AbitanteEJB/trovaPerCategoriaResponse")
    public List<Abitante> trovaPerCategoria(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<abitanteserver.Abitante>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaPerContrattoCovid", targetNamespace = "http://abitanteserver/", className = "abitanteserver.TrovaPerContrattoCovid")
    @ResponseWrapper(localName = "trovaPerContrattoCovidResponse", targetNamespace = "http://abitanteserver/", className = "abitanteserver.TrovaPerContrattoCovidResponse")
    @Action(input = "http://abitanteserver/AbitanteEJB/trovaPerContrattoCovidRequest", output = "http://abitanteserver/AbitanteEJB/trovaPerContrattoCovidResponse")
    public List<Abitante> trovaPerContrattoCovid(
        @WebParam(name = "arg0", targetNamespace = "")
        boolean arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns java.util.List<abitanteserver.Abitante>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaPerCategoriaEeta", targetNamespace = "http://abitanteserver/", className = "abitanteserver.TrovaPerCategoriaEeta")
    @ResponseWrapper(localName = "trovaPerCategoriaEetaResponse", targetNamespace = "http://abitanteserver/", className = "abitanteserver.TrovaPerCategoriaEetaResponse")
    @Action(input = "http://abitanteserver/AbitanteEJB/trovaPerCategoriaEetaRequest", output = "http://abitanteserver/AbitanteEJB/trovaPerCategoriaEetaResponse")
    public List<Abitante> trovaPerCategoriaEeta(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "inserisci", targetNamespace = "http://abitanteserver/", className = "abitanteserver.Inserisci")
    @ResponseWrapper(localName = "inserisciResponse", targetNamespace = "http://abitanteserver/", className = "abitanteserver.InserisciResponse")
    @Action(input = "http://abitanteserver/AbitanteEJB/inserisciRequest", output = "http://abitanteserver/AbitanteEJB/inserisciResponse")
    public void inserisci(
        @WebParam(name = "arg0", targetNamespace = "")
        Abitante arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "elimina", targetNamespace = "http://abitanteserver/", className = "abitanteserver.Elimina")
    @ResponseWrapper(localName = "eliminaResponse", targetNamespace = "http://abitanteserver/", className = "abitanteserver.EliminaResponse")
    @Action(input = "http://abitanteserver/AbitanteEJB/eliminaRequest", output = "http://abitanteserver/AbitanteEJB/eliminaResponse")
    public void elimina(
        @WebParam(name = "arg0", targetNamespace = "")
        Abitante arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "aggiorna", targetNamespace = "http://abitanteserver/", className = "abitanteserver.Aggiorna")
    @ResponseWrapper(localName = "aggiornaResponse", targetNamespace = "http://abitanteserver/", className = "abitanteserver.AggiornaResponse")
    @Action(input = "http://abitanteserver/AbitanteEJB/aggiornaRequest", output = "http://abitanteserver/AbitanteEJB/aggiornaResponse")
    public void aggiorna(
        @WebParam(name = "arg0", targetNamespace = "")
        Abitante arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<abitanteserver.Abitante>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaPerEta", targetNamespace = "http://abitanteserver/", className = "abitanteserver.TrovaPerEta")
    @ResponseWrapper(localName = "trovaPerEtaResponse", targetNamespace = "http://abitanteserver/", className = "abitanteserver.TrovaPerEtaResponse")
    @Action(input = "http://abitanteserver/AbitanteEJB/trovaPerEtaRequest", output = "http://abitanteserver/AbitanteEJB/trovaPerEtaResponse")
    public List<Abitante> trovaPerEta(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @return
     *     returns java.util.List<abitanteserver.Abitante>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaTutto", targetNamespace = "http://abitanteserver/", className = "abitanteserver.TrovaTutto")
    @ResponseWrapper(localName = "trovaTuttoResponse", targetNamespace = "http://abitanteserver/", className = "abitanteserver.TrovaTuttoResponse")
    @Action(input = "http://abitanteserver/AbitanteEJB/trovaTuttoRequest", output = "http://abitanteserver/AbitanteEJB/trovaTuttoResponse")
    public List<Abitante> trovaTutto();

    /**
     * 
     * @param arg0
     * @return
     *     returns abitanteserver.Abitante
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaPerId", targetNamespace = "http://abitanteserver/", className = "abitanteserver.TrovaPerId")
    @ResponseWrapper(localName = "trovaPerIdResponse", targetNamespace = "http://abitanteserver/", className = "abitanteserver.TrovaPerIdResponse")
    @Action(input = "http://abitanteserver/AbitanteEJB/trovaPerIdRequest", output = "http://abitanteserver/AbitanteEJB/trovaPerIdResponse")
    public Abitante trovaPerId(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns java.util.List<abitanteserver.Abitante>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaPerCategoriaEinteresseVaccino", targetNamespace = "http://abitanteserver/", className = "abitanteserver.TrovaPerCategoriaEinteresseVaccino")
    @ResponseWrapper(localName = "trovaPerCategoriaEinteresseVaccinoResponse", targetNamespace = "http://abitanteserver/", className = "abitanteserver.TrovaPerCategoriaEinteresseVaccinoResponse")
    @Action(input = "http://abitanteserver/AbitanteEJB/trovaPerCategoriaEinteresseVaccinoRequest", output = "http://abitanteserver/AbitanteEJB/trovaPerCategoriaEinteresseVaccinoResponse")
    public List<Abitante> trovaPerCategoriaEinteresseVaccino(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

}
