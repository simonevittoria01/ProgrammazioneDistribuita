
package immobileserver;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * Eclipse Metro/4.0.4 (RELEASE-4.0.4-ec440d5; 2024-06-28T10:09:00+0000) XMLWS-Impl/4.0.3 XMLWS-API/4.0.2 XMLB-Impl/4.0.5 XMLB-API/4.0.2
 * Generated source version: 3.0
 * 
 */
@WebService(name = "ImmobileEJB", targetNamespace = "http://immobileserver/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ImmobileEJB {


    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "inserisci", targetNamespace = "http://immobileserver/", className = "immobileserver.Inserisci")
    @ResponseWrapper(localName = "inserisciResponse", targetNamespace = "http://immobileserver/", className = "immobileserver.InserisciResponse")
    @Action(input = "http://immobileserver/ImmobileEJB/inserisciRequest", output = "http://immobileserver/ImmobileEJB/inserisciResponse")
    public void inserisci(
        @WebParam(name = "arg0", targetNamespace = "")
        Immobile arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "elimina", targetNamespace = "http://immobileserver/", className = "immobileserver.Elimina")
    @ResponseWrapper(localName = "eliminaResponse", targetNamespace = "http://immobileserver/", className = "immobileserver.EliminaResponse")
    @Action(input = "http://immobileserver/ImmobileEJB/eliminaRequest", output = "http://immobileserver/ImmobileEJB/eliminaResponse")
    public void elimina(
        @WebParam(name = "arg0", targetNamespace = "")
        Immobile arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "aggiorna", targetNamespace = "http://immobileserver/", className = "immobileserver.Aggiorna")
    @ResponseWrapper(localName = "aggiornaResponse", targetNamespace = "http://immobileserver/", className = "immobileserver.AggiornaResponse")
    @Action(input = "http://immobileserver/ImmobileEJB/aggiornaRequest", output = "http://immobileserver/ImmobileEJB/aggiornaResponse")
    public void aggiorna(
        @WebParam(name = "arg0", targetNamespace = "")
        Immobile arg0);

    /**
     * 
     * @return
     *     returns java.util.List<immobileserver.Immobile>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaTutto", targetNamespace = "http://immobileserver/", className = "immobileserver.TrovaTutto")
    @ResponseWrapper(localName = "trovaTuttoResponse", targetNamespace = "http://immobileserver/", className = "immobileserver.TrovaTuttoResponse")
    @Action(input = "http://immobileserver/ImmobileEJB/trovaTuttoRequest", output = "http://immobileserver/ImmobileEJB/trovaTuttoResponse")
    public List<Immobile> trovaTutto();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<immobileserver.Immobile>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaPerStato", targetNamespace = "http://immobileserver/", className = "immobileserver.TrovaPerStato")
    @ResponseWrapper(localName = "trovaPerStatoResponse", targetNamespace = "http://immobileserver/", className = "immobileserver.TrovaPerStatoResponse")
    @Action(input = "http://immobileserver/ImmobileEJB/trovaPerStatoRequest", output = "http://immobileserver/ImmobileEJB/trovaPerStatoResponse")
    public List<Immobile> trovaPerStato(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns immobileserver.Immobile
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaPerId", targetNamespace = "http://immobileserver/", className = "immobileserver.TrovaPerId")
    @ResponseWrapper(localName = "trovaPerIdResponse", targetNamespace = "http://immobileserver/", className = "immobileserver.TrovaPerIdResponse")
    @Action(input = "http://immobileserver/ImmobileEJB/trovaPerIdRequest", output = "http://immobileserver/ImmobileEJB/trovaPerIdResponse")
    public Immobile trovaPerId(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<immobileserver.Immobile>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaPerIndirizzo", targetNamespace = "http://immobileserver/", className = "immobileserver.TrovaPerIndirizzo")
    @ResponseWrapper(localName = "trovaPerIndirizzoResponse", targetNamespace = "http://immobileserver/", className = "immobileserver.TrovaPerIndirizzoResponse")
    @Action(input = "http://immobileserver/ImmobileEJB/trovaPerIndirizzoRequest", output = "http://immobileserver/ImmobileEJB/trovaPerIndirizzoResponse")
    public List<Immobile> trovaPerIndirizzo(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<immobileserver.Immobile>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaPerDataVendita", targetNamespace = "http://immobileserver/", className = "immobileserver.TrovaPerDataVendita")
    @ResponseWrapper(localName = "trovaPerDataVenditaResponse", targetNamespace = "http://immobileserver/", className = "immobileserver.TrovaPerDataVenditaResponse")
    @Action(input = "http://immobileserver/ImmobileEJB/trovaPerDataVenditaRequest", output = "http://immobileserver/ImmobileEJB/trovaPerDataVenditaResponse")
    public List<Immobile> trovaPerDataVendita(
        @WebParam(name = "arg0", targetNamespace = "")
        LocalDate arg0);

}
