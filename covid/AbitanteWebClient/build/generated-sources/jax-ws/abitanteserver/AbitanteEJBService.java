
package abitanteserver;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the XML-WS Tools.
 * Eclipse Metro/4.0.4 (RELEASE-4.0.4-ec440d5; 2024-06-28T10:09:00+0000) XMLWS-Impl/4.0.3 XMLWS-API/4.0.2 XMLB-Impl/4.0.5 XMLB-API/4.0.2
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "AbitanteEJBService", targetNamespace = "http://abitanteserver/", wsdlLocation = "http://Host-001.homenet.telecomitalia.it:8080/AbitanteEJBService/AbitanteEJB?wsdl")
public class AbitanteEJBService
    extends Service
{

    private static final URL ABITANTEEJBSERVICE_WSDL_LOCATION;
    private static final WebServiceException ABITANTEEJBSERVICE_EXCEPTION;
    private static final QName ABITANTEEJBSERVICE_QNAME = new QName("http://abitanteserver/", "AbitanteEJBService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://Host-001.homenet.telecomitalia.it:8080/AbitanteEJBService/AbitanteEJB?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        ABITANTEEJBSERVICE_WSDL_LOCATION = url;
        ABITANTEEJBSERVICE_EXCEPTION = e;
    }

    public AbitanteEJBService() {
        super(__getWsdlLocation(), ABITANTEEJBSERVICE_QNAME);
    }

    public AbitanteEJBService(WebServiceFeature... features) {
        super(__getWsdlLocation(), ABITANTEEJBSERVICE_QNAME, features);
    }

    public AbitanteEJBService(URL wsdlLocation) {
        super(wsdlLocation, ABITANTEEJBSERVICE_QNAME);
    }

    public AbitanteEJBService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ABITANTEEJBSERVICE_QNAME, features);
    }

    public AbitanteEJBService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AbitanteEJBService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns AbitanteEJB
     */
    @WebEndpoint(name = "AbitanteEJBPort")
    public AbitanteEJB getAbitanteEJBPort() {
        return super.getPort(new QName("http://abitanteserver/", "AbitanteEJBPort"), AbitanteEJB.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AbitanteEJB
     */
    @WebEndpoint(name = "AbitanteEJBPort")
    public AbitanteEJB getAbitanteEJBPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://abitanteserver/", "AbitanteEJBPort"), AbitanteEJB.class, features);
    }

    private static URL __getWsdlLocation() {
        if (ABITANTEEJBSERVICE_EXCEPTION!= null) {
            throw ABITANTEEJBSERVICE_EXCEPTION;
        }
        return ABITANTEEJBSERVICE_WSDL_LOCATION;
    }

}
